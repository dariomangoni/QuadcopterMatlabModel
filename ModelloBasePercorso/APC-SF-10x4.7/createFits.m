function [fitresult, gof] = createFits(rpm10x47rpm, rpm10x47J, rpm10x47T)
%CREATEFITS1(RPM10X47RPM,RPM10X47J,RPM10X47T)
%  Create fits.
%
%  Data for 'Rpm10x47Poly22' fit:
%      X Input : rpm10x47rpm
%      Y Input : rpm10x47J
%      Z Output: rpm10x47T
%  Data for 'Rpm10x47Poly22Bisquare' fit:
%      X Input : rpm10x47rpm
%      Y Input : rpm10x47J
%      Z Output: rpm10x47T
%  Data for 'Rpm10x47Poly22Bisquare copy 1' fit:
%      X Input : rpm10x47rpm
%      Y Input : rpm10x47J
%      Z Output: rpm10x47T
%  Output:
%      fitresult : a cell-array of fit objects representing the fits.
%      gof : structure array with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 16-Jun-2013 12:04:12

%% Initialization.

% Initialize arrays to store fits and goodness-of-fit.
fitresult = cell( 3, 1 );
gof = struct( 'sse', cell( 3, 1 ), ...
    'rsquare', [], 'dfe', [], 'adjrsquare', [], 'rmse', [] );

%% Fit: 'Rpm10x47Poly22'.
[xData, yData, zData] = prepareSurfaceData( rpm10x47rpm, rpm10x47J, rpm10x47T );

% Set up fittype and options.
ft = fittype( 'poly22' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf];
opts.Upper = [Inf Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult{1}, gof(1)] = fit( [xData, yData], zData, ft, opts );

% Create a figure for the plots.
figure( 'Name', 'Rpm10x47Poly22' );

% Plot fit with data.
subplot( 2, 1, 1 );
h = plot( fitresult{1}, [xData, yData], zData );
legend( h, 'Rpm10x47Poly22', 'rpm10x47T vs. rpm10x47rpm, rpm10x47J', 'Location', 'NorthEast' );
% Label axes
xlabel( 'rpm10x47rpm' );
ylabel( 'rpm10x47J' );
zlabel( 'rpm10x47T' );
grid on
view( -142.5, 12 );

% Plot residuals.
subplot( 2, 1, 2 );
h = plot( fitresult{1}, [xData, yData], zData, 'Style', 'Residual' );
legend( h, 'Rpm10x47Poly22 - residuals', 'Location', 'NorthEast' );
% Label axes
xlabel( 'rpm10x47rpm' );
ylabel( 'rpm10x47J' );
zlabel( 'rpm10x47T' );
grid on
view( -142.5, 12 );

%% Fit: 'Rpm10x47Poly22Bisquare'.
[xData, yData, zData] = prepareSurfaceData( rpm10x47rpm, rpm10x47J, rpm10x47T );

% Set up fittype and options.
ft = fittype( 'poly22' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf];
opts.Robust = 'Bisquare';
opts.Upper = [Inf Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult{2}, gof(2)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Rpm10x47Poly22Bisquare' );
h = plot( fitresult{2}, [xData, yData], zData );
legend( h, 'Rpm10x47Poly22Bisquare', 'rpm10x47T vs. rpm10x47rpm, rpm10x47J', 'Location', 'NorthEast' );
% Label axes
xlabel( 'rpm10x47rpm' );
ylabel( 'rpm10x47J' );
zlabel( 'rpm10x47T' );
grid on
view( -201.5, -12 );

%% Fit: 'Rpm10x47Poly22Bisquare copy 1'.
[xData, yData, zData] = prepareSurfaceData( rpm10x47rpm, rpm10x47J, rpm10x47T );

% Set up fittype and options.
ft = fittype( 'poly32' );
opts = fitoptions( ft );
opts.Lower = [-Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf -Inf];
opts.Robust = 'Bisquare';
opts.Upper = [Inf Inf Inf Inf Inf Inf Inf Inf Inf];

% Fit model to data.
[fitresult{3}, gof(3)] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
figure( 'Name', 'Rpm10x47Poly22Bisquare copy 1' );
h = plot( fitresult{3}, [xData, yData], zData );
legend( h, 'Rpm10x47Poly22Bisquare copy 1', 'rpm10x47T vs. rpm10x47rpm, rpm10x47J', 'Location', 'NorthEast' );
% Label axes
xlabel( 'rpm10x47rpm' );
ylabel( 'rpm10x47J' );
zlabel( 'rpm10x47T' );
grid on


